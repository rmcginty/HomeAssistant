- strobe:
    name: "Strobe: Warning"
    colors:
    - red: 100%
      green: 75%
      blue: 15%
      white: 0%
      duration: 500ms
    - state: off
      duration: 250ms
- strobe:
    name: "Strobe: Emergency"
    colors:
    - red: 100%
      green: 0%
      blue: 0%
      white: 0%
      duration: 500ms
    - state: off
      duration: 250ms
- flicker:
- lambda:
    name: "Random: Fast"
    update_interval: 1s
    lambda: |-
      auto call = id(rgb_light).turn_on();
      call.set_transition_length(500);
      call.set_rgb(random_float(), random_float(), random_float());
      call.perform();
- lambda:
    name: "Theme: Holiday - Christmas"
    update_interval: 1s
    lambda: |-
      static int color = 0;
      static int state = 0;
      
      auto call = id(rgb_light).turn_on();

      if (state == 0) {
        call.set_transition_length(5000);
        call.set_brightness(0.01);
        if (color == 0) {
          call.set_rgb(1.0, 0.0, 0.0);
        } else {
          call.set_rgb(0.0, 1.0, 0.0);
        }
        call.perform();
      } else if (state == 3) {
        call.set_transition_length(3000);

        call.set_brightness(1.00);
        call.perform();

        color++;
        if (color == 2)
          color = 0;
      }
      
      state++;
      if (state == 30)
        state = 0;
- lambda:
    name: "Theme: Holiday - Halloween"
    update_interval: 30s
    lambda: |-
      static int color = 0;
      auto call = id(rgb_light).turn_on();
      call.set_transition_length(5000);
      if (color == 0) {
        call.set_rgb(1.0, 0.0, 1.0);
      } else {
        call.set_rgb(1.0, 0.5, 0.0);
      }
      call.perform();
      color++;
      if (color == 2)
        color = 0;
- lambda:
    name: "Theme: Holiday - 4th of July"
    update_interval: 10s
    lambda: |-
      static int color = 0;
      auto call = id(rgb_light).turn_on();
      call.set_transition_length(5000);
      if (color == 0) {
        call.set_rgb(1.0, 0.0, 0.0);
      } else if (color == 1) {
        call.set_rgb(1.0, 1.0, 1.0);
      } else {
        call.set_rgb(0.0, 0.0, 1.0);
      }
      call.perform();
      color++;
      if (color == 3)
        color = 0;
- lambda:
    name: "Breathing: Default"
    update_interval: 5s
    lambda: |-
      #define Color1 1.0, 0.0, 0.0
      #define Color2 1.0, 0.5, 0.0
      #define Color3 1.0, 1.0, 0.0
      #define Color4 0.5, 1.0, 0.0
      #define Color5 0.0, 1.0, 0.0
      #define Color6 0.0, 1.0, 0.5
      #define Color7 0.0, 1.0, 1.0
      #define Color8 0.0, 0.5, 1.0
      #define Color9 0.0, 0.0, 1.0
      #define Color10 0.5, 0.0, 1.0
      #define Color11 0.5, 0.0, 1.0
      #define Color12 1.0, 0.0, 0.5
      
      static int state = 0;
      static int color = 1;
      
      auto call = id(rgb_light).turn_on();
      call.set_transition_length(5000);
      if (state == 0) {
        call.set_brightness(0.01);
      } else if (state == 1) {
        switch(color)
        {
          case 1: call.set_rgb(Color1);
                  break;
          case 2: call.set_rgb(Color2);
                  break;
          case 3: call.set_rgb(Color3);
                  break;
          case 4: call.set_rgb(Color4);
                  break;
          case 5: call.set_rgb(Color5);
                  break;
          case 6: call.set_rgb(Color6);
                  break;
          case 7: call.set_rgb(Color7);
                  break;
          case 8: call.set_rgb(Color8);
                  break;
          case 9: call.set_rgb(Color9);
                  break;
          case 10: call.set_rgb(Color10);
                  break;
          case 11: call.set_rgb(Color11);
                  break;
          case 12: call.set_rgb(Color12);
                  break;
        }
        call.set_brightness(1.00);
      }
      
      state++;
      if (state == 2)
        state = 0;

      color++;
      if (color == 7)
        color = 1;
      
      call.perform();